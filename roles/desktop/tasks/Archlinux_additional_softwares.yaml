---
# yay drequires a sudoer but not root to do operations, if the sudoer needs a
# password, a aur task would stuck at asking for password. therefore create a
# sudoer without password to do AUR packages installation.
- name: Create a `aur_builder` user
  ansible.builtin.user:
    name: aur_builder
    create_home: true
    group: wheel
  become: true
- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: true
    validate: 'visudo -cf %s'
    mode: u=r,g=r,o=
  become: true

# Install docker and start service
- name: Install docker
  community.general.pacman:
    name: docker
    state: present
  become: true
- name: Start docker service and set to auto start
  ansible.builtin.service:
    name: docker
    enabled: true
    state: started
  become: true
- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  become: true

- name: Install Sypatics touchpad driver
  community.general.pacman:
    name: xf86-input-synaptics
    state: present
  become: true
- name: Synaptics touchpad config
  ansible.builtin.copy:
    dest: /etc/X11/xorg.conf.d/30-touchpad.conf
    content: |
      Section "InputClass"
          Identifier "touchpad"
          Driver "synaptics"
          MatchIsTouchpad "on"
          Option "AccelFactor" "0.20"
      EndSection
    mode: u=rw,g=r,o=r
  become: true
- name: Check if has nvidia-settings
  community.general.pacman:
    name: nvidia-settings
    state: present
  check_mode: true
  register: has_nvidia_settings
  changed_when: has_nvidia_settings.packages | length > 0
- name: Install graphic card manager
  kewlfft.aur.aur:
    name: optimus-manager-qt
    state: present
  environment: "{{ proxy_env }}"
  become: true
  become_user: aur_builder
  when: not has_nvidia_settings.changed # noqa: no-handler # see: https://ansible-lint.readthedocs.io/rules/no-handler/
- name: Optimus manager config  # see: https://github.com/Askannz/optimus-manager#important--manjaro-kde-users
  ansible.builtin.replace:
    path: /etc/sddm.conf
    regexp: '^(# )?{{ item }}'
    replace: '# {{ item }}'
  loop:
    - DisplayCommand
    - DisplayStopCommand
  become: true
  when: not has_nvidia_settings.changed # noqa: no-handler # see: https://ansible-lint.readthedocs.io/rules/no-handler/
- name: Set graphic environment vars
  ansible.builtin.blockinfile:
    path: ~/.xprofile
    create: true
    block: |
      # for fcitx input method
      export GTK_IM_MODULE=fcitx
      export QT_IM_MODULE=fcitx
      export XMODIFIERS=@im=fcitx
      # override QT scale
      export QT_SCREEN_SCALE_FACTORS=1
      # override QT style of applications like dolphin, kate
      export QT_STYLE_OVERRIDE=kvantum
    mode: u=rw,g=r,o=r
- name: Make sure aria2 config directory exists
  ansible.builtin.file:
    path: ~/.config/aria2/
    state: directory
    mode: u=rwx,g=rx,o=rx
- name: Copy aria2 config
  ansible.builtin.copy:
    src: aria2.conf
    dest: ~/.config/aria2/
    mode: u=rw,g=r,o=r
- name: Install Chinese input method
  become: true
  community.general.pacman:
    state: present
    name:
      - fcitx5-im
      - fcitx5-material-color
      - fcitx5-chinese-addons
- name: Install desktop softwares
  become: true
  community.general.pacman:
    state: present
    name:
      # system
      - kvantum
      # record/show
      - flameshot
      - peek
      - simplescreenrecorder
      - screenkey
      # graphics
      - vlc
      - handbrake
      - kdenlive
      - jpegoptim
      - optipng
      - ghostscript
      # remote access
      - manjaro-settings-samba
      - filezilla
      - sshfs
      # - frpc/frps
      - remmina
      - freerdp
      # other
      - rar
      - ventoy-bin
      - aria2
      - minicom
      - nodejs
      - npm
      - jdk-openjdk
- name: Install extra desktop softwares from AUR
  become: true
  become_user: aur_builder
  environment: "{{ proxy_env }}"
  ignore_errors: true
  register: install_result1
  kewlfft.aur.aur:
    state: present
    name:
      # development
      - microsoft-edge-dev-bin
      - typora-free
      - visual-studio-code-bin
      - kate-wakatime-git
      - github-desktop-bin
      # remote
      - sunloginclient
- name: Change mirror source of npm
  ansible.builtin.command:
    cmd: npm config set registry https://registry.npm.taobao.org
  changed_when: true
- name: Install yarn
  community.general.npm:
    name: yarn
    global: true
  become: true
- name: Change mirror source of yarn
  ansible.builtin.command:
    cmd: yarn config set registry https://registry.npm.taobao.org
  changed_when: true
- name: Install office softwares from AUR
  kewlfft.aur.aur:
    name: "{{ item }}"
    state: present
  become: true
  become_user: aur_builder
  environment: "{{ proxy_env }}"
  ignore_errors: true
  register: install_result2
  loop:
    - linuxqq
    - deepin-wine-wechat
    - onedrivegui
    - zotero-bin
    - wemeet-bin
    - zoom
    - wps-office-cn  # wps套件国内版
    - wps-office-mui-zh-cn  # wps中文语言包
    - ttf-wps-fonts  # wps需要的字体和符号
    - wps-office-mime-cn  # wps mime types
- name: Install TexLive
  community.general.pacman:
    name:
      - texlive-most
      - texlive-lang
      - biber
      - python-pygments
    state: present
  become: true

- name: Set autostart applications
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: ~/.config/autostart/
    mode: u=rw,g=r,o=r
  loop:
    - /usr/share/applications/org.flameshot.Flameshot.desktop
    - /usr/share/applications/onedrivegui.desktop
- name: Set autostart scripts
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: ~/.config/autostart/{{ item.filename }}
    mode: u=rw,g=r,o=r
  loop:
    - filename: aria2.desktop
      content: |
        [Desktop Entry]
        Exec=/home/{{ ansible_user_id }}/Desktop/Shell-Scripts/aria2
        Icon=dialog-scripts
        Name=aria2
        Path=
        Type=Application
        X-KDE-AutostartScript=true
    - filename: clash-dashboard.desktop
      content: |
        [Desktop Entry]
        Exec=/home/{{ ansible_user_id }}/Desktop/Shell-Scripts/clash-dashboard
        Icon=dialog-scripts
        Name=clash-dashboard
        Path=
        Type=Application
        X-KDE-AutostartScript=true
