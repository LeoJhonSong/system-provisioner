---
# Install docker and start service
- name: Install docker
  ansible.builtin.pacman:
    name: docker
    state: present
  become: true
- name: Start docker service and set to auto start
  ansible.builtin.service:
    name: docker
    enabled: true
    state: started
- name: Add user to docker group
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: true
  become: true

- name: Install compiledb  # for compile_commands.json generation for make projects
  ansible.builtin.pip:
    name: compiledb
- name: Make sure fd directory exist
  ansible.builtin.file:
    path: "~/.config/fd"
    state: directory
    mode: 0755
- name: Link fd ignore file
  ansible.builtin.file:
    src: "{{ source_dir }}/roles/common/files/fd/ignore"
    dest: ~/.config/fd/ignore
    state: link
- name: Install fzf, with compeletion, with keybinding, no zshrc change
  ansible.builtin.shell:
    cmd: |
      git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
      ~/.fzf/install --key-bindings --completion --no-update-rc
- name: Install Sypatics touchpad driver
  kewlfft.aur.aur:
    name: xf86-input-synaptics
    state: present
- name: Synaptics touchpad config
  ansible.builtin.copy:
    dest: /etc/X11/xorg.conf.d/30-touchpad.conf
    content: |
      Section "InputClass"
          Identifier "touchpad"
          Driver "synaptics"
          MatchIsTouchpad "on"
          Option "AccelFactor" "0.20"
      EndSection
    mode: 0644
  become: true
- name: Check if has NVIDIA driver
  ansible.builtin.command:
    cmd: nvidia-smi
  ignore_errors: true
  register: check_nvidia
- name: Install graphic card manager
  kewlfft.aur.aur:
    name: optimus-manager-qt
    state: present
  when: check_nvidia.stdout.find('command not found') != -1
- name: Optimus manager config  # see: https://github.com/Askannz/optimus-manager#important--manjaro-kde-users
  ansible.builtin.replace:
    path: /etc/sddm.conf
    regexp: '^(# )?{{ item }}'
    replace: '# {{ item }}'
  loop:
    - DisplayCommand
    - DisplayStopCommand
  become: true
  when: check_nvidia.stdout.find('command not found') != -1
- name: Set graphic environment vars
  ansible.builtin.blockinfile:
    path: ~/.pam_environment
    create: true
    block: |
      # for fcitx input method
      GTK_IM_MODULE DEFAULT=fcitx
      QT_IM_MODULE DEFAULT=fcitx
      XMODIFIERS DEFAULT=@im=fcitx
    mode: 0644
- name: Make sure aria2 config directory exists
  ansible.builtin.file:
    path: ~/.config/aria2/
    state: directory
    mode: 0755
- name: Copy aria2 config
  ansible.builtin.copy:
    src: aria2.conf
    dest: ~/.config/aria2/
    mode: 0644
- name: Install input method
  kewlfft.aur.aur:
    name: "{{ item }}"
    state: present
  loop:
    - fcitx5-im
    - fcitx5-material-color
    - fcitx5-chinese-addons
- name: Install desktop softwares
  kewlfft.aur.aur:
    name: "{{ item }}"
    state: present
  loop:
    # system
    - kvantum-qt5
    - latte-dock
    # developing
    - google-chrome
    - typora-free
    - visual-studio-code-bin
    - github-desktop-bin
    # record/show
    - flameshot
    - peek
    - simplescreenrecorder
    - screenkey
    # graphics
    - vlc
    - handbrake
    - kdenlive
    - jpegoptim
    - optipng
    - ghostscript
    # remote access
    - manjaro-settings-samba
    - filezilla
    - sshfs
    # - frpc/frps
    - remmina
    - freerdp
    # other
    - curl
    - wget
    - autojump
    - ventoy-bin
    - aria2
    - minicom
    - nodejs
    - npm
    - jdk-openjdk
- name: Change mirror source of npm
  ansible.builtin.command:
    cmd: npm config set registry https://registry.npm.taobao.org
  when: lookup('ansible.builtin.file', '~/.npmrc') | regex_search('.*taobao.*', multiline=True) is none
- name: Install yarn
  ansible.builtin.npm:
    name: yarn
    global: true
  become: true
- name: Change mirror source of yarn
  ansible.builtin.command:
    cmd: yarn config set registry https://registry.npm.taobao.org
  when: lookup('ansible.builtin.file', '~/.yarnrc') | regex_search('.*taobao.*', multiline=True) is none
- name: Install office softwares
  kewlfft.aur.aur:
    name: "{{ item }}"
    state: present
  loop:
    - deepin-wine-tim
    - deepin-wine-wechat
    - wemeet-bin
    - zoom
    - wps-office-cn  # wps套件国内版
    - wps-office-mui-zh-cn  # wps中文语言包
    - ttf-wps-fonts  # wps需要的字体和符号
    - wps-office-mime-cn  # wps mime types
  environment: "{{ proxy_env }}"
- name: Make sure ~/.config/zoomus.conf exists
  ansible.builtin.shell:
    cmd: |
      zoom &
      pkill zoom
    creates: ~/.config/zoomus.conf
- name: Configure zoom scale
  ansible.builtin.lineinfile:
    path: ~/.config/zoomus.conf
    regexp: '^autoScale'
    line: autoScale=false
- name: Install TexLive
  kewlfft.aur.aur:
    name: "{{ item }}"
    state: present
  loop:
    - texlive-most
    - texlive-lang
    - biber
  environment: "{{ proxy_env }}"
- name: Install dependency for code syntax hihglight in latex
  ansible.builtin.pip:
    name: pygments

- name: Set autostart applications
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: ~/.config/autostart/
    mode: 0644
  loop:
    - /usr/share/applications/org.flameshot.Flameshot.desktop
- name: Set autostart scripts
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: ~/.config/autostart/{{ item.filename }}
    mode: 0644
  loop:
    - filename: aria2.desktop
      content: |
        [Desktop Entry]
        Exec=/home/{{ ansible_user_id }}/Desktop/Shell-Scripts/aria2
        Icon=dialog-scripts
        Name=aria2
        Path=
        Type=Application
        X-KDE-AutostartScript=true
    - filename: clash-dashboard.desktop
      content: |
        [Desktop Entry]
        Exec=/home/{{ ansible_user_id }}/Desktop/Shell-Scripts/clash-dashboard
        Icon=dialog-scripts
        Name=clash-dashboard
        Path=
        Type=Application
        X-KDE-AutostartScript=true
