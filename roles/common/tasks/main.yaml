---
- name: Configure package manager
  ansible.builtin.include_tasks:
    file: "{{ ansible_facts['distribution'] }}_pm_cfg.yaml"

- name: Configure git
  community.general.git_config:
    scope: global
    name: "{{ item.key }}"
    value: "{{ item.value }}"
  loop:
    - key: user.name
      value: "{{ ansible_hostname }}"
    - key: user.email
      value: LeoJhon.Song@outlook.com
    - key: credential.helper
      value: store

- name: Clone this repo
  ansible.builtin.git:
    repo: https://github.com/LeoJhonSong/system-provisioner
    dest: "{{ source_dir }}"
    version: HEAD # noqa: latest # see: https://ansible-lint.readthedocs.io/rules/latest/
    update: false # allow local changes
  environment: "{{ proxy_env }}"

# Configure pip
- name: Make sure pip directory exist
  ansible.builtin.file:
    path: "~/.config/pip"
    state: directory
    mode: u=rwx,g=rx,o=rx
- name: Overwrite pip.conf
  ansible.builtin.copy:
    dest: "~/.config/pip/pip.conf"
    force: true
    content: |
      [global]
      index-url = https://mirrors.aliyun.com/pypi/simple/
    mode: u=rw,g=r,o=r

# Install pyenv
- name: Find pyenv script
  ansible.builtin.find:
    paths: ~/.pyenv/
  register: common_find_pyenv
- name: Download pyenv install script
  ansible.builtin.get_url:
    url: https://pyenv.run
    dest: /tmp/install_pyenv.sh
    mode: u+x
  when: common_find_pyenv.examined == 0
  environment: "{{ proxy_env }}"
- name: Install pyenv
  ansible.builtin.command:
    cmd: /tmp/install_pyenv.sh
    creates: ~/.pyenv/bin/pyenv
  when: common_find_pyenv.examined == 0
  environment: "{{ proxy_env }}"

- name: Copy clang-format config
  ansible.builtin.copy:
    src: .clang-format
    dest: ~/.clang-format
    mode: u=rw,g=r,o=r

# Configure zsh, tmux
- name: Copy Wakatime config
  ansible.builtin.copy:
    src: .wakatime.cfg
    dest: ~/
    mode: u=rw
- name: Install dependency for project detection of Wakatime
  ansible.builtin.shell:
    cmd: python3 -c "$(wget -q -O - https://raw.githubusercontent.com/wakatime/vim-wakatime/master/scripts/install_cli.py)"
    creates: ~/.wakatime/wakatime-cli
  environment: "{{ proxy_env }}"
- name: Copy python prompt config
  ansible.builtin.copy:
    src: .pythonrc.py
    dest: ~/
    mode: u=rw,g=r,o=r
- name: Install zsh, tmux
  ansible.builtin.package:
    name:
      - zsh
      - tmux
    state: present
  become: true
- name: Read content of ~/.zshrc on remote machine
  ansible.builtin.slurp:
    src: ~/.zshrc
  register: common_zshrc
- name: Copy zsh local config
  ansible.builtin.copy:
    src: zsh/default.local.zsh
    dest: ~/.zshrc
    mode: u=rw,g=r,o=r
    force: true
  when: common_zshrc['content'] | b64decode | regex_search('^export BACKUP_DIR=', multiline=True) is none # content given by slurp is base64 encoded
- name: Find ohmyzsh files
  ansible.builtin.find:
    paths: ~/.oh-my-zsh/
  register: common_find_ohmyzsh
- name: Download oh-my-zsh install script if not installed
  ansible.builtin.get_url:
    url: https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh
    dest: /tmp/install.sh
    mode: u+x
  when: common_find_ohmyzsh.examined == 0
  environment: "{{ proxy_env }}"
- name: Install oh-my-zsh
  ansible.builtin.command:
    cmd: /tmp/install.sh --unattended --keep-zshrc
  changed_when: true
  environment: "{{ proxy_env }}"
  when: common_find_ohmyzsh.examined == 0
- name: Install plugins for zsh
  ansible.builtin.shell:
    executable: /usr/bin/zsh
    cmd: source ~/.zshrc
  register: common_install_zsh_plugin
  changed_when: common_install_zsh_plugin.stdout | regex_search('.*Installing.*', multiline=True) is not none
  environment: "{{ proxy_env }}"
- name: Link tmux config
  ansible.builtin.file:
    src: "{{ source_dir }}/roles/common/files/tmux/{{ item }}"
    dest: "~/{{ item }}"
    state: link
  loop:
    - .tmux.conf
    - .tmux.conf.local
